apply plugin: 'com.android.library'
apply plugin: 'maven'

group = 'host.exp.exponent'
version = '0.5.4'

// Simple helper that allows the root project to override versions declared by this library.
def safeExtGet(prop, fallback) {
  rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
}

android {
  compileSdkVersion safeExtGet("compileSdkVersion", 30)

  defaultConfig {
    minSdkVersion safeExtGet("minSdkVersion", 21)
    targetSdkVersion safeExtGet("targetSdkVersion", 30)
    versionCode 31
    versionName '0.5.4'
    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
  }
  lintOptions {
    abortOnError false
  }
  compileOptions {
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
  }
  testOptions {
    unitTests.includeAndroidResources = true
  }
  sourceSets {
    androidTest.assets.srcDirs += files("$projectDir/src/androidTest/schemas".toString())
  }
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
}

repositories {
  mavenCentral()
  google()
  jcenter()
  maven { url 'https://jitpack.io' }
}

dependencies {

  implementation project(':unimodules-core')
  implementation project(':expo-structured-headers')
  implementation 'com.github.beatjs:react-android:0.63.4.0'

  def room_version = "2.1.0"

  implementation "androidx.room:room-runtime:$room_version"
  annotationProcessor "androidx.room:room-compiler:$room_version"

  implementation("com.squareup.okhttp3:okhttp:3.12.1")
  implementation("com.squareup.okhttp3:okhttp-urlconnection:3.12.1")
  implementation("com.squareup.okio:okio:1.15.0")
  implementation("commons-io:commons-io:2.6")
  implementation("org.apache.commons:commons-lang3:3.9")
}
